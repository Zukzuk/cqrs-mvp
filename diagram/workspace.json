{
  "configuration" : { },
  "description" : "Description",
  "documentation" : { },
  "id" : 1,
  "lastModifiedAgent" : "structurizr-ui",
  "lastModifiedDate" : "2025-09-22T09:46:54Z",
  "model" : {
    "properties" : {
      "structurizr.groupSeparator" : "::"
    },
    "softwareSystems" : [ {
      "containers" : [ {
        "description" : "Provides a robust messaging broker with management UI",
        "documentation" : { },
        "group" : ".Event Platform",
        "id" : "2",
        "name" : "Broker",
        "properties" : {
          "structurizr.dsl.identifier" : "broker_service"
        },
        "tags" : "Element,Container,Broker",
        "technology" : "RabbitMQ [4672]"
      }, {
        "description" : "Catch OTLP and send data to Otel Collector",
        "documentation" : { },
        "group" : ".Order Domain",
        "id" : "3",
        "name" : "Otel Order Domain",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_inject_order_domain"
        },
        "relationships" : [ {
          "description" : "report metrics and traces",
          "destinationId" : "7",
          "id" : "34",
          "sourceId" : "3",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Injector",
        "technology" : "Code injection"
      }, {
        "description" : "Subscribes to certain Commands, protects the DomainLogic, emits DomainEvents to the broker",
        "documentation" : { },
        "group" : ".Order Domain",
        "id" : "4",
        "name" : "Order Application",
        "properties" : {
          "structurizr.dsl.identifier" : "order_service"
        },
        "relationships" : [ {
          "description" : "subscribe to certain Commands, publish DomainEvents",
          "destinationId" : "2",
          "id" : "21",
          "sourceId" : "4",
          "tags" : "Relationship"
        }, {
          "description" : "fetch streams, commit DomainEvents",
          "destinationId" : "6",
          "id" : "22",
          "sourceId" : "4",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express [4000]"
      }, {
        "description" : "Append only journal for DomainEvents",
        "documentation" : { },
        "group" : ".Order Domain::.Event Store",
        "id" : "5",
        "name" : "Order EventStore Database",
        "properties" : {
          "structurizr.dsl.identifier" : "order_eventstore_db"
        },
        "tags" : "Element,Container,{,Database",
        "technology" : "MongoDB [default]"
      }, {
        "description" : "Durable, append-only event journal",
        "documentation" : { },
        "group" : ".Order Domain::.Event Store",
        "id" : "6",
        "name" : "Order EventStore",
        "properties" : {
          "structurizr.dsl.identifier" : "order_eventstore_service"
        },
        "relationships" : [ {
          "description" : "read, write",
          "destinationId" : "5",
          "id" : "20",
          "sourceId" : "6",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express [4001]"
      }, {
        "description" : "Recieve OTLP and save and/or expose it",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "7",
        "name" : "OpenTelemetry Collector",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_collector"
        },
        "relationships" : [ {
          "description" : "depends_on",
          "destinationId" : "10",
          "id" : "23",
          "sourceId" : "7",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Observability",
        "technology" : "OpenTelemetry Collector [9464]"
      }, {
        "description" : "Dashboards and explore traces and metrics",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "8",
        "name" : "Grafana",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_grafana"
        },
        "relationships" : [ {
          "description" : "depends_on",
          "destinationId" : "9",
          "id" : "24",
          "sourceId" : "8",
          "tags" : "Relationship"
        }, {
          "description" : "depends_on",
          "destinationId" : "10",
          "id" : "25",
          "sourceId" : "8",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Observability",
        "technology" : "Grafana [8300]"
      }, {
        "description" : "Scrape data from OTel Collector en RabbitMQ",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "9",
        "name" : "Prometheus",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_prometheus"
        },
        "relationships" : [ {
          "description" : "scrape metrics",
          "destinationId" : "2",
          "id" : "26",
          "sourceId" : "9",
          "tags" : "Relationship"
        }, {
          "description" : "get metrics",
          "destinationId" : "7",
          "id" : "27",
          "sourceId" : "9",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Observability",
        "technology" : "Prometheus [8900]"
      }, {
        "description" : "Persistance for traces",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "10",
        "name" : "Tempo",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_tempo"
        },
        "tags" : "Element,Container,{,Database",
        "technology" : "Grafana Tempo [8200]"
      }, {
        "description" : "Catch OTLP and send data to Otel Collector",
        "documentation" : { },
        "group" : ".Shop",
        "id" : "11",
        "name" : "Otel Shop",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_inject_shop"
        },
        "relationships" : [ {
          "description" : "report metrics and traces",
          "destinationId" : "7",
          "id" : "35",
          "sourceId" : "11",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Injector",
        "technology" : "Code injection"
      }, {
        "description" : "Exposes and guards WebSocket/APIs, publishes Commands to the broker, forwards Queries to projections, listens for Payloads from projections and forwards them to web clients",
        "documentation" : { },
        "group" : ".Shop",
        "id" : "12",
        "name" : "Shop BFF",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_bff_service"
        },
        "relationships" : [ {
          "description" : "publish Commands",
          "destinationId" : "2",
          "id" : "28",
          "sourceId" : "12",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express, Socket.io [3000]"
      }, {
        "description" : "Read DB for denormalized views",
        "documentation" : { },
        "group" : ".Shop::.Projection",
        "id" : "13",
        "name" : "Shop Projection Database",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_projection_db"
        },
        "relationships" : [ {
          "description" : "seed script via fetch streams",
          "destinationId" : "6",
          "id" : "29",
          "sourceId" : "13",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Database",
        "technology" : "Node.js, MongoDB [default]"
      }, {
        "description" : "Handles fetches, subscribes to DomainEvents, denormalizes and upserts Payloads, pushes Payloads to bff",
        "documentation" : { },
        "group" : ".Shop::.Projection",
        "id" : "14",
        "name" : "Shop Projection",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_projection_service"
        },
        "relationships" : [ {
          "description" : "subscribe to certain DomainEvents",
          "destinationId" : "2",
          "id" : "30",
          "sourceId" : "14",
          "tags" : "Relationship"
        }, {
          "description" : "listen for Queries and push Payloads",
          "destinationId" : "12",
          "id" : "31",
          "sourceId" : "14",
          "tags" : "Relationship"
        }, {
          "description" : "fetch data, upsert data",
          "destinationId" : "13",
          "id" : "32",
          "sourceId" : "14",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express, Socket.io-client [3002]"
      }, {
        "description" : "Web interface, connects to bff via wss, sends Queries and Commands to bff, renders incoming Payloads",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "15",
        "name" : "Shop Frontend SPA",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver"
        },
        "relationships" : [ {
          "description" : "send Commands and Queries, listen for Payloads",
          "destinationId" : "12",
          "id" : "33",
          "sourceId" : "15",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Webclient",
        "technology" : "Browser, Socket.io.min [URL]"
      }, {
        "description" : "Serves static files",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "16",
        "name" : "Shop Frontend Server",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver_server"
        },
        "relationships" : [ {
          "description" : "serves",
          "destinationId" : "15",
          "id" : "18",
          "sourceId" : "16",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Nginx [3001]"
      }, {
        "description" : "End user interacting via browser",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "17",
        "name" : "User",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver_user"
        },
        "relationships" : [ {
          "description" : "uses",
          "destinationId" : "15",
          "id" : "19",
          "sourceId" : "17",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Person",
        "technology" : "Person"
      } ],
      "documentation" : { },
      "id" : "1",
      "location" : "Unspecified",
      "name" : "CQRS-ES System (MVP)",
      "properties" : {
        "structurizr.dsl.identifier" : "shop"
      },
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Name",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlIHsKICBtb2RlbCAiY3Fycy1tdnAiIHsKICAgIHByb3BlcnRpZXMgewogICAgICBzdHJ1Y3R1cml6ci5ncm91cFNlcGFyYXRvciAiOjoiCiAgICB9CgogICAgc2hvcCA9IHNvZnR3YXJlU3lzdGVtICJDUVJTLUVTIFN5c3RlbSAoTVZQKSIgewoKICAgICAgZ3JvdXAgIi5FdmVudCBQbGF0Zm9ybSIgewogICAgICAgIGJyb2tlcl9zZXJ2aWNlID0gY29udGFpbmVyICJCcm9rZXIiICJQcm92aWRlcyBhIHJvYnVzdCBtZXNzYWdpbmcgYnJva2VyIHdpdGggbWFuYWdlbWVudCBVSSIgIlJhYmJpdE1RIFs0NjcyXSIgewogICAgICAgICAgdGFncyAiQnJva2VyIgogICAgICAgIH0KICAgICAgfQoKICAgICAgZ3JvdXAgIi5PcmRlciBEb21haW4iIHsKICAgICAgICBvdGVsX2luamVjdF9vcmRlcl9kb21haW4gPSBjb250YWluZXIgIk90ZWwgT3JkZXIgRG9tYWluIiAiQ2F0Y2ggT1RMUCBhbmQgc2VuZCBkYXRhIHRvIE90ZWwgQ29sbGVjdG9yIiAiQ29kZSBpbmplY3Rpb24iIHsKICAgICAgICAgIHRhZ3MgIkluamVjdG9yIgogICAgICAgIH0KICAgICAgICBvcmRlcl9zZXJ2aWNlID0gY29udGFpbmVyICJPcmRlciBBcHBsaWNhdGlvbiIgIlN1YnNjcmliZXMgdG8gY2VydGFpbiBDb21tYW5kcywgcHJvdGVjdHMgdGhlIERvbWFpbkxvZ2ljLCBlbWl0cyBEb21haW5FdmVudHMgdG8gdGhlIGJyb2tlciIgIk5vZGUuanMsIEV4cHJlc3MgWzQwMDBdIgoKICAgICAgICBncm91cCAiLkV2ZW50IFN0b3JlIiB7CiAgICAgICAgICBvcmRlcl9ldmVudHN0b3JlX2RiID0gY29udGFpbmVyICJPcmRlciBFdmVudFN0b3JlIERhdGFiYXNlIiAiQXBwZW5kIG9ubHkgam91cm5hbCBmb3IgRG9tYWluRXZlbnRzIiAiTW9uZ29EQiBbZGVmYXVsdF0iIiB7CiAgICAgICAgICAgIHRhZ3MgIkRhdGFiYXNlIgogICAgICAgICAgfQogICAgICAgICAgb3JkZXJfZXZlbnRzdG9yZV9zZXJ2aWNlID0gY29udGFpbmVyICJPcmRlciBFdmVudFN0b3JlIiAiRHVyYWJsZSwgYXBwZW5kLW9ubHkgZXZlbnQgam91cm5hbCIgIk5vZGUuanMsIEV4cHJlc3MgWzQwMDFdIgogICAgICAgIH0KICAgICAgfQoKICAgICAgZ3JvdXAgIi5PYnNlcnZhYmlsaXR5IiB7CiAgICAgICAgb3RlbF9jb2xsZWN0b3IgPSBjb250YWluZXIgIk9wZW5UZWxlbWV0cnkgQ29sbGVjdG9yIiAiUmVjaWV2ZSBPVExQIGFuZCBzYXZlIGFuZC9vciBleHBvc2UgaXQiICJPcGVuVGVsZW1ldHJ5IENvbGxlY3RvciBbOTQ2NF0iIiB7CiAgICAgICAgICB0YWdzICJPYnNlcnZhYmlsaXR5IgogICAgICAgIH0KICAgICAgICBvdGVsX2dyYWZhbmEgPSBjb250YWluZXIgIkdyYWZhbmEiICJEYXNoYm9hcmRzIGFuZCBleHBsb3JlIHRyYWNlcyBhbmQgbWV0cmljcyIgIkdyYWZhbmEgWzgzMDBdIiIgewogICAgICAgICAgdGFncyAiT2JzZXJ2YWJpbGl0eSIKICAgICAgICB9CiAgICAgICAgb3RlbF9wcm9tZXRoZXVzID0gY29udGFpbmVyICJQcm9tZXRoZXVzIiAiU2NyYXBlIGRhdGEgZnJvbSBPVGVsIENvbGxlY3RvciBlbiBSYWJiaXRNUSIgIlByb21ldGhldXMgWzg5MDBdIiIgewogICAgICAgICAgdGFncyAiT2JzZXJ2YWJpbGl0eSIKICAgICAgICB9CiAgICAgICAgb3RlbF90ZW1wbyA9IGNvbnRhaW5lciAiVGVtcG8iICJQZXJzaXN0YW5jZSBmb3IgdHJhY2VzIiAiR3JhZmFuYSBUZW1wbyBbODIwMF0iIiB7CiAgICAgICAgICB0YWdzICJEYXRhYmFzZSIKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGdyb3VwICIuU2hvcCIgewogICAgICAgIG90ZWxfaW5qZWN0X3Nob3AgPSBjb250YWluZXIgIk90ZWwgU2hvcCIgIkNhdGNoIE9UTFAgYW5kIHNlbmQgZGF0YSB0byBPdGVsIENvbGxlY3RvciIgIkNvZGUgaW5qZWN0aW9uIiB7CiAgICAgICAgICB0YWdzICJJbmplY3RvciIKICAgICAgICB9CiAgICAgICAgc2hvcF9iZmZfc2VydmljZSA9IGNvbnRhaW5lciAiU2hvcCBCRkYiICJFeHBvc2VzIGFuZCBndWFyZHMgV2ViU29ja2V0L0FQSXMsIHB1Ymxpc2hlcyBDb21tYW5kcyB0byB0aGUgYnJva2VyLCBmb3J3YXJkcyBRdWVyaWVzIHRvIHByb2plY3Rpb25zLCBsaXN0ZW5zIGZvciBQYXlsb2FkcyBmcm9tIHByb2plY3Rpb25zIGFuZCBmb3J3YXJkcyB0aGVtIHRvIHdlYiBjbGllbnRzIiAiTm9kZS5qcywgRXhwcmVzcywgU29ja2V0LmlvIFszMDAwXSIKCiAgICAgICAgZ3JvdXAgIi5Qcm9qZWN0aW9uIiB7CiAgICAgICAgICBzaG9wX3Byb2plY3Rpb25fZGIgPSBjb250YWluZXIgIlNob3AgUHJvamVjdGlvbiBEYXRhYmFzZSIgIlJlYWQgREIgZm9yIGRlbm9ybWFsaXplZCB2aWV3cyIgIk5vZGUuanMsIE1vbmdvREIgW2RlZmF1bHRdIiIgewogICAgICAgICAgICB0YWdzICJEYXRhYmFzZSIKICAgICAgICAgIH0KICAgICAgICAgIHNob3BfcHJvamVjdGlvbl9zZXJ2aWNlID0gY29udGFpbmVyICJTaG9wIFByb2plY3Rpb24iICJIYW5kbGVzIGZldGNoZXMsIHN1YnNjcmliZXMgdG8gRG9tYWluRXZlbnRzLCBkZW5vcm1hbGl6ZXMgYW5kIHVwc2VydHMgUGF5bG9hZHMsIHB1c2hlcyBQYXlsb2FkcyB0byBiZmYiICJOb2RlLmpzLCBFeHByZXNzLCBTb2NrZXQuaW8tY2xpZW50IFszMDAyXSIKICAgICAgICB9CgogICAgICAgIGdyb3VwICIuV2Vic2l0ZSIgewogICAgICAgICAgc2hvcF93ZWJzZXJ2ZXIgPSBjb250YWluZXIgIlNob3AgRnJvbnRlbmQgU1BBIiAiV2ViIGludGVyZmFjZSwgY29ubmVjdHMgdG8gYmZmIHZpYSB3c3MsIHNlbmRzIFF1ZXJpZXMgYW5kIENvbW1hbmRzIHRvIGJmZiwgcmVuZGVycyBpbmNvbWluZyBQYXlsb2FkcyIgIkJyb3dzZXIsIFNvY2tldC5pby5taW4gW1VSTF0iIHsKICAgICAgICAgICAgdGFncyAiV2ViY2xpZW50IgogICAgICAgICAgfQogICAgICAgICAgc2hvcF93ZWJzZXJ2ZXJfc2VydmVyID0gY29udGFpbmVyICJTaG9wIEZyb250ZW5kIFNlcnZlciIgIlNlcnZlcyBzdGF0aWMgZmlsZXMiICJOZ2lueCBbMzAwMV0iCiAgICAgICAgICBzaG9wX3dlYnNlcnZlcl91c2VyID0gY29udGFpbmVyICJVc2VyIiAiRW5kIHVzZXIgaW50ZXJhY3RpbmcgdmlhIGJyb3dzZXIiICJQZXJzb24iIHsKICAgICAgICAgICAgdGFncyAiUGVyc29uIgogICAgICAgICAgfQogICAgICAgICAgc2hvcF93ZWJzZXJ2ZXJfc2VydmVyIC0+IHNob3Bfd2Vic2VydmVyICJzZXJ2ZXMiCiAgICAgICAgICBzaG9wX3dlYnNlcnZlcl91c2VyIC0+IHNob3Bfd2Vic2VydmVyICJ1c2VzIgogICAgICAgIH0KICAgICAgfQoKCiAgICAgIG9yZGVyX2V2ZW50c3RvcmVfc2VydmljZSAtPiBvcmRlcl9ldmVudHN0b3JlX2RiICJyZWFkLCB3cml0ZSIKICAgICAgb3JkZXJfc2VydmljZSAtPiBicm9rZXJfc2VydmljZSAic3Vic2NyaWJlIHRvIGNlcnRhaW4gQ29tbWFuZHMsIHB1Ymxpc2ggRG9tYWluRXZlbnRzIgogICAgICBvcmRlcl9zZXJ2aWNlIC0+IG9yZGVyX2V2ZW50c3RvcmVfc2VydmljZSAiZmV0Y2ggc3RyZWFtcywgY29tbWl0IERvbWFpbkV2ZW50cyIKICAgICAgb3RlbF9jb2xsZWN0b3IgLT4gb3RlbF90ZW1wbyAiZGVwZW5kc19vbiIKICAgICAgb3RlbF9ncmFmYW5hIC0+IG90ZWxfcHJvbWV0aGV1cyAiZGVwZW5kc19vbiIKICAgICAgb3RlbF9ncmFmYW5hIC0+IG90ZWxfdGVtcG8gImRlcGVuZHNfb24iCiAgICAgIG90ZWxfcHJvbWV0aGV1cyAtPiBicm9rZXJfc2VydmljZSAic2NyYXBlIG1ldHJpY3MiCiAgICAgIG90ZWxfcHJvbWV0aGV1cyAtPiBvdGVsX2NvbGxlY3RvciAiZ2V0IG1ldHJpY3MiCiAgICAgIHNob3BfYmZmX3NlcnZpY2UgLT4gYnJva2VyX3NlcnZpY2UgInB1Ymxpc2ggQ29tbWFuZHMiCiAgICAgIHNob3BfcHJvamVjdGlvbl9kYiAtPiBvcmRlcl9ldmVudHN0b3JlX3NlcnZpY2UgInNlZWQgc2NyaXB0IHZpYSBmZXRjaCBzdHJlYW1zIgogICAgICBzaG9wX3Byb2plY3Rpb25fc2VydmljZSAtPiBicm9rZXJfc2VydmljZSAic3Vic2NyaWJlIHRvIGNlcnRhaW4gRG9tYWluRXZlbnRzIgogICAgICBzaG9wX3Byb2plY3Rpb25fc2VydmljZSAtPiBzaG9wX2JmZl9zZXJ2aWNlICJsaXN0ZW4gZm9yIFF1ZXJpZXMgYW5kIHB1c2ggUGF5bG9hZHMiCiAgICAgIHNob3BfcHJvamVjdGlvbl9zZXJ2aWNlIC0+IHNob3BfcHJvamVjdGlvbl9kYiAiZmV0Y2ggZGF0YSwgdXBzZXJ0IGRhdGEiCiAgICAgIHNob3Bfd2Vic2VydmVyIC0+IHNob3BfYmZmX3NlcnZpY2UgInNlbmQgQ29tbWFuZHMgYW5kIFF1ZXJpZXMsIGxpc3RlbiBmb3IgUGF5bG9hZHMiCiAgICAgIG90ZWxfaW5qZWN0X29yZGVyX2RvbWFpbiAtPiBvdGVsX2NvbGxlY3RvciAicmVwb3J0IG1ldHJpY3MgYW5kIHRyYWNlcyIKICAgICAgb3RlbF9pbmplY3Rfc2hvcCAtPiBvdGVsX2NvbGxlY3RvciAicmVwb3J0IG1ldHJpY3MgYW5kIHRyYWNlcyIKICAgIH0KICB9CgogIHZpZXdzIHsKICAgIGNvbnRhaW5lciBzaG9wIGNvbnRhaW5lcl92aWV3ICJDb250YWluZXIgRGlhZ3JhbSIgewogICAgICBpbmNsdWRlICoKICAgIH0KICAgIHN0eWxlcyB7CiAgICAgIGVsZW1lbnQgKiB7CiAgICAgICAgc2hhcGUgcm91bmRlZGJveAogICAgICAgIGJhY2tncm91bmQgInJveWFsYmx1ZSIKICAgICAgfQogICAgICBlbGVtZW50ICJCcm9rZXIiIHsKICAgICAgICBzaGFwZSBoZXhhZ29uCiAgICAgICAgYmFja2dyb3VuZCAidG9tYXRvIgogICAgICB9CiAgICAgIGVsZW1lbnQgIkluamVjdG9yIiB7CiAgICAgICAgc2hhcGUgZWxsaXBzZQogICAgICAgIGJhY2tncm91bmQgImJsYWNrIgogICAgICB9CiAgICAgIGVsZW1lbnQgIk9ic2VydmFiaWxpdHkiIHsKICAgICAgICBzaGFwZSByb3VuZGVkYm94CiAgICAgICAgYmFja2dyb3VuZCAiZGFya29yYW5nZSIKICAgICAgfQogICAgICBlbGVtZW50ICJEYXRhYmFzZSIgewogICAgICAgIHNoYXBlIGN5bGluZGVyCiAgICAgICAgYmFja2dyb3VuZCAib3JjaGlkIgogICAgICB9CiAgICAgIGVsZW1lbnQgIldlYmNsaWVudCIgewogICAgICAgIHNoYXBlIHdlYmJyb3dzZXIKICAgICAgICBiYWNrZ3JvdW5kICJzZWFncmVlbiIKICAgICAgfQogICAgICBlbGVtZW50ICJQZXJzb24iIHsKICAgICAgICBiYWNrZ3JvdW5kICJzZWFncmVlbiIKICAgICAgfQogICAgfQogICAgdGhlbWUgZGVmYXVsdAogIH0KfQ=="
  },
  "views" : {
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "container_view",
      "metadataSymbols" : "SquareBrackets",
      "styles" : {
        "elements" : [ {
          "background" : "#4169e1",
          "shape" : "RoundedBox",
          "tag" : "*"
        }, {
          "background" : "#ff6347",
          "shape" : "Hexagon",
          "tag" : "Broker"
        }, {
          "background" : "#000000",
          "shape" : "Ellipse",
          "tag" : "Injector"
        }, {
          "background" : "#ff8c00",
          "shape" : "RoundedBox",
          "tag" : "Observability"
        }, {
          "background" : "#da70d6",
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#2e8b57",
          "shape" : "WebBrowser",
          "tag" : "Webclient"
        }, {
          "background" : "#2e8b57",
          "tag" : "Person"
        } ]
      },
      "terminology" : { },
      "themes" : [ "https://static.structurizr.com/themes/default/theme.json" ]
    },
    "containerViews" : [ {
      "description" : "Container Diagram",
      "dimensions" : {
        "height" : 4083,
        "width" : 4993
      },
      "elements" : [ {
        "id" : "2",
        "x" : 3135,
        "y" : 1405
      }, {
        "id" : "3",
        "x" : 3365,
        "y" : 200
      }, {
        "id" : "4",
        "x" : 3335,
        "y" : 590
      }, {
        "id" : "5",
        "x" : 4207,
        "y" : 190
      }, {
        "id" : "6",
        "x" : 4107,
        "y" : 580
      }, {
        "id" : "7",
        "x" : 820,
        "y" : 880
      }, {
        "id" : "8",
        "x" : 80,
        "y" : 1450
      }, {
        "id" : "9",
        "x" : 820,
        "y" : 1450
      }, {
        "id" : "10",
        "x" : 85,
        "y" : 870
      }, {
        "id" : "11",
        "x" : 2490,
        "y" : 2230
      }, {
        "id" : "12",
        "x" : 3038,
        "y" : 2225
      }, {
        "id" : "13",
        "x" : 4118,
        "y" : 2675
      }, {
        "id" : "14",
        "x" : 3773,
        "y" : 2215
      }, {
        "id" : "15",
        "x" : 3040,
        "y" : 2835
      }, {
        "id" : "16",
        "x" : 3040,
        "y" : 3265
      }, {
        "id" : "17",
        "x" : 2470,
        "y" : 2800
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "container_view",
      "order" : 1,
      "relationships" : [ {
        "id" : "18"
      }, {
        "id" : "19"
      }, {
        "id" : "20"
      }, {
        "id" : "21"
      }, {
        "id" : "22"
      }, {
        "id" : "23"
      }, {
        "id" : "24"
      }, {
        "id" : "25"
      }, {
        "id" : "26"
      }, {
        "id" : "27"
      }, {
        "id" : "28"
      }, {
        "id" : "29"
      }, {
        "id" : "30"
      }, {
        "id" : "31"
      }, {
        "id" : "32"
      }, {
        "id" : "33"
      }, {
        "id" : "34"
      }, {
        "id" : "35"
      } ],
      "softwareSystemId" : "1"
    } ]
  }
}