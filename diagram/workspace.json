{
  "configuration" : { },
  "description" : "Description",
  "documentation" : { },
  "id" : 1,
  "lastModifiedDate" : "2025-08-18T13:16:58Z",
  "model" : {
    "properties" : {
      "structurizr.groupSeparator" : "::"
    },
    "softwareSystems" : [ {
      "containers" : [ {
        "description" : "Provides a robust messaging broker with management UI",
        "documentation" : { },
        "group" : ".Event Platform",
        "id" : "2",
        "name" : "Broker",
        "properties" : {
          "structurizr.dsl.identifier" : "broker_service"
        },
        "tags" : "Element,Container,Broker",
        "technology" : "RabbitMQ [5672,${RABBITMQ_UI_PORT}]"
      }, {
        "description" : "Subscribes to certain Commands, protects the DomainLogic, emits DomainEvents to the broker",
        "documentation" : { },
        "group" : ".Order Domain",
        "id" : "3",
        "name" : "Order Application",
        "properties" : {
          "structurizr.dsl.identifier" : "order_service"
        },
        "relationships" : [ {
          "description" : "subscribe to certain Commands, publish DomainEvents",
          "destinationId" : "2",
          "id" : "14",
          "sourceId" : "3",
          "tags" : "Relationship"
        }, {
          "description" : "fetch streams, commit DomainEvents",
          "destinationId" : "4",
          "id" : "15",
          "sourceId" : "3",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express [${ORDER_SERVICE_PORT}]"
      }, {
        "description" : "Durable, append-only event journal",
        "documentation" : { },
        "group" : ".Order Domain::.Event Store",
        "id" : "4",
        "name" : "Order EventStore",
        "properties" : {
          "structurizr.dsl.identifier" : "order_eventstore_service"
        },
        "relationships" : [ {
          "description" : "read, write",
          "destinationId" : "5",
          "id" : "16",
          "sourceId" : "4",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express [${EVENTSTORE_SERVICE_PORT}]"
      }, {
        "description" : "Append only journal for DomainEvents",
        "documentation" : { },
        "group" : ".Order Domain::.Event Store",
        "id" : "5",
        "name" : "Order EventStore Database",
        "properties" : {
          "structurizr.dsl.identifier" : "order_eventstore_db"
        },
        "tags" : "Element,Container,{,Database",
        "technology" : "MongoDB [default]"
      }, {
        "description" : "Exposes and guards WebSocket/APIs, publishes Commands to the broker, forwards Queries to projections, listens for Payloads from projections and forwards them to web clients",
        "documentation" : { },
        "group" : ".Shop",
        "id" : "6",
        "name" : "Shop BFF",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_bff_service"
        },
        "relationships" : [ {
          "description" : "publish Commands",
          "destinationId" : "2",
          "id" : "17",
          "sourceId" : "6",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express, Socket.io [${SHOP_BFF_PORT}]"
      }, {
        "description" : "Web interface, connects to bff via wss, sends Queries and Commands to bff, renders incoming Payloads",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "7",
        "name" : "Shop Frontend SPA",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver"
        },
        "relationships" : [ {
          "description" : "send Commands and Queries, listen for Payloads",
          "destinationId" : "6",
          "id" : "18",
          "sourceId" : "7",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Webclient",
        "technology" : "Browser, Socket.io.min [URL]"
      }, {
        "description" : "Serves static files",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "8",
        "name" : "Shop Frontend Server",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver_server"
        },
        "relationships" : [ {
          "description" : "serves",
          "destinationId" : "7",
          "id" : "10",
          "sourceId" : "8",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Nginx [${SHOP_WEB_PORT}]"
      }, {
        "description" : "End user interacting via browser",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "9",
        "name" : "User",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver_user"
        },
        "relationships" : [ {
          "description" : "uses",
          "destinationId" : "7",
          "id" : "11",
          "sourceId" : "9",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Person",
        "technology" : "Person"
      }, {
        "description" : "Handles fetches, subscribes to DomainEvents, denormalizes and upserts Payloads, pushes Payloads to bff",
        "documentation" : { },
        "group" : ".Shop::.Projection",
        "id" : "12",
        "name" : "Shop Projection",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_projection_service"
        },
        "relationships" : [ {
          "description" : "subscribe to certain DomainEvents",
          "destinationId" : "2",
          "id" : "19",
          "sourceId" : "12",
          "tags" : "Relationship"
        }, {
          "description" : "listen for Queries and push Payloads",
          "destinationId" : "6",
          "id" : "20",
          "sourceId" : "12",
          "tags" : "Relationship"
        }, {
          "description" : "fetch data, upsert data",
          "destinationId" : "13",
          "id" : "21",
          "sourceId" : "12",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express, Socket.io-client [${SHOP_PROJECTION_PORT}]"
      }, {
        "description" : "Read DB for denormalized views",
        "documentation" : { },
        "group" : ".Shop::.Projection",
        "id" : "13",
        "name" : "Shop Projection Database",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_projection_db"
        },
        "relationships" : [ {
          "description" : "seed script via fetch streams",
          "destinationId" : "4",
          "id" : "22",
          "sourceId" : "13",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Database",
        "technology" : "Node.js, MongoDB [default]"
      } ],
      "documentation" : { },
      "id" : "1",
      "location" : "Unspecified",
      "name" : "CQRS-ES System (MVP)",
      "properties" : {
        "structurizr.dsl.identifier" : "shop"
      },
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Name",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlIHsKICBtb2RlbCAiY3Fycy1tdnAiIHsKICAgIHByb3BlcnRpZXMgewogICAgICBzdHJ1Y3R1cml6ci5ncm91cFNlcGFyYXRvciAiOjoiCiAgICB9CgogICAgc2hvcCA9IHNvZnR3YXJlU3lzdGVtICJDUVJTLUVTIFN5c3RlbSAoTVZQKSIgewoKICAgICAgZ3JvdXAgIi5FdmVudCBQbGF0Zm9ybSIgewogICAgICAgIGJyb2tlcl9zZXJ2aWNlID0gY29udGFpbmVyICJCcm9rZXIiICJQcm92aWRlcyBhIHJvYnVzdCBtZXNzYWdpbmcgYnJva2VyIHdpdGggbWFuYWdlbWVudCBVSSIgIlJhYmJpdE1RIFs1NjcyLCR7UkFCQklUTVFfVUlfUE9SVH1dIiB7CiAgICAgICAgICB0YWdzICJCcm9rZXIiCiAgICAgICAgfQogICAgICB9CgogICAgICBncm91cCAiLk9yZGVyIERvbWFpbiIgewogICAgICAgIG9yZGVyX3NlcnZpY2UgPSBjb250YWluZXIgIk9yZGVyIEFwcGxpY2F0aW9uIiAiU3Vic2NyaWJlcyB0byBjZXJ0YWluIENvbW1hbmRzLCBwcm90ZWN0cyB0aGUgRG9tYWluTG9naWMsIGVtaXRzIERvbWFpbkV2ZW50cyB0byB0aGUgYnJva2VyIiAiTm9kZS5qcywgRXhwcmVzcyBbJHtPUkRFUl9TRVJWSUNFX1BPUlR9XSIKCiAgICAgICAgZ3JvdXAgIi5FdmVudCBTdG9yZSIgewogICAgICAgICAgb3JkZXJfZXZlbnRzdG9yZV9zZXJ2aWNlID0gY29udGFpbmVyICJPcmRlciBFdmVudFN0b3JlIiAiRHVyYWJsZSwgYXBwZW5kLW9ubHkgZXZlbnQgam91cm5hbCIgIk5vZGUuanMsIEV4cHJlc3MgWyR7RVZFTlRTVE9SRV9TRVJWSUNFX1BPUlR9XSIKICAgICAgICAgIG9yZGVyX2V2ZW50c3RvcmVfZGIgPSBjb250YWluZXIgIk9yZGVyIEV2ZW50U3RvcmUgRGF0YWJhc2UiICJBcHBlbmQgb25seSBqb3VybmFsIGZvciBEb21haW5FdmVudHMiICJNb25nb0RCIFtkZWZhdWx0XSIiIHsKICAgICAgICAgICAgdGFncyAiRGF0YWJhc2UiCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBncm91cCAiLlNob3AiIHsKICAgICAgICBzaG9wX2JmZl9zZXJ2aWNlID0gY29udGFpbmVyICJTaG9wIEJGRiIgIkV4cG9zZXMgYW5kIGd1YXJkcyBXZWJTb2NrZXQvQVBJcywgcHVibGlzaGVzIENvbW1hbmRzIHRvIHRoZSBicm9rZXIsIGZvcndhcmRzIFF1ZXJpZXMgdG8gcHJvamVjdGlvbnMsIGxpc3RlbnMgZm9yIFBheWxvYWRzIGZyb20gcHJvamVjdGlvbnMgYW5kIGZvcndhcmRzIHRoZW0gdG8gd2ViIGNsaWVudHMiICJOb2RlLmpzLCBFeHByZXNzLCBTb2NrZXQuaW8gWyR7U0hPUF9CRkZfUE9SVH1dIgoKICAgICAgICBncm91cCAiLldlYnNpdGUiIHsKICAgICAgICAgIHNob3Bfd2Vic2VydmVyID0gY29udGFpbmVyICJTaG9wIEZyb250ZW5kIFNQQSIgIldlYiBpbnRlcmZhY2UsIGNvbm5lY3RzIHRvIGJmZiB2aWEgd3NzLCBzZW5kcyBRdWVyaWVzIGFuZCBDb21tYW5kcyB0byBiZmYsIHJlbmRlcnMgaW5jb21pbmcgUGF5bG9hZHMiICJCcm93c2VyLCBTb2NrZXQuaW8ubWluIFtVUkxdIiB7CiAgICAgICAgICAgIHRhZ3MgIldlYmNsaWVudCIKICAgICAgICAgIH0KICAgICAgICAgIHNob3Bfd2Vic2VydmVyX3NlcnZlciA9IGNvbnRhaW5lciAiU2hvcCBGcm9udGVuZCBTZXJ2ZXIiICJTZXJ2ZXMgc3RhdGljIGZpbGVzIiAiTmdpbnggWyR7U0hPUF9XRUJfUE9SVH1dIgogICAgICAgICAgc2hvcF93ZWJzZXJ2ZXJfdXNlciA9IGNvbnRhaW5lciAiVXNlciIgIkVuZCB1c2VyIGludGVyYWN0aW5nIHZpYSBicm93c2VyIiAiUGVyc29uIiB7CiAgICAgICAgICAgIHRhZ3MgIlBlcnNvbiIKICAgICAgICAgIH0KICAgICAgICAgIHNob3Bfd2Vic2VydmVyX3NlcnZlciAtPiBzaG9wX3dlYnNlcnZlciAic2VydmVzIgogICAgICAgICAgc2hvcF93ZWJzZXJ2ZXJfdXNlciAtPiBzaG9wX3dlYnNlcnZlciAidXNlcyIKICAgICAgICB9CgogICAgICAgIGdyb3VwICIuUHJvamVjdGlvbiIgewogICAgICAgICAgc2hvcF9wcm9qZWN0aW9uX3NlcnZpY2UgPSBjb250YWluZXIgIlNob3AgUHJvamVjdGlvbiIgIkhhbmRsZXMgZmV0Y2hlcywgc3Vic2NyaWJlcyB0byBEb21haW5FdmVudHMsIGRlbm9ybWFsaXplcyBhbmQgdXBzZXJ0cyBQYXlsb2FkcywgcHVzaGVzIFBheWxvYWRzIHRvIGJmZiIgIk5vZGUuanMsIEV4cHJlc3MsIFNvY2tldC5pby1jbGllbnQgWyR7U0hPUF9QUk9KRUNUSU9OX1BPUlR9XSIKICAgICAgICAgIHNob3BfcHJvamVjdGlvbl9kYiA9IGNvbnRhaW5lciAiU2hvcCBQcm9qZWN0aW9uIERhdGFiYXNlIiAiUmVhZCBEQiBmb3IgZGVub3JtYWxpemVkIHZpZXdzIiAiTm9kZS5qcywgTW9uZ29EQiBbZGVmYXVsdF0iIiB7CiAgICAgICAgICAgIHRhZ3MgIkRhdGFiYXNlIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKCiAgICAgIG9yZGVyX3NlcnZpY2UgLT4gYnJva2VyX3NlcnZpY2UgInN1YnNjcmliZSB0byBjZXJ0YWluIENvbW1hbmRzLCBwdWJsaXNoIERvbWFpbkV2ZW50cyIKICAgICAgb3JkZXJfc2VydmljZSAtPiBvcmRlcl9ldmVudHN0b3JlX3NlcnZpY2UgImZldGNoIHN0cmVhbXMsIGNvbW1pdCBEb21haW5FdmVudHMiCiAgICAgIG9yZGVyX2V2ZW50c3RvcmVfc2VydmljZSAtPiBvcmRlcl9ldmVudHN0b3JlX2RiICJyZWFkLCB3cml0ZSIKICAgICAgc2hvcF9iZmZfc2VydmljZSAtPiBicm9rZXJfc2VydmljZSAicHVibGlzaCBDb21tYW5kcyIKICAgICAgc2hvcF93ZWJzZXJ2ZXIgLT4gc2hvcF9iZmZfc2VydmljZSAic2VuZCBDb21tYW5kcyBhbmQgUXVlcmllcywgbGlzdGVuIGZvciBQYXlsb2FkcyIKICAgICAgc2hvcF9wcm9qZWN0aW9uX3NlcnZpY2UgLT4gYnJva2VyX3NlcnZpY2UgInN1YnNjcmliZSB0byBjZXJ0YWluIERvbWFpbkV2ZW50cyIKICAgICAgc2hvcF9wcm9qZWN0aW9uX3NlcnZpY2UgLT4gc2hvcF9iZmZfc2VydmljZSAibGlzdGVuIGZvciBRdWVyaWVzIGFuZCBwdXNoIFBheWxvYWRzIgogICAgICBzaG9wX3Byb2plY3Rpb25fc2VydmljZSAtPiBzaG9wX3Byb2plY3Rpb25fZGIgImZldGNoIGRhdGEsIHVwc2VydCBkYXRhIgogICAgICBzaG9wX3Byb2plY3Rpb25fZGIgLT4gb3JkZXJfZXZlbnRzdG9yZV9zZXJ2aWNlICJzZWVkIHNjcmlwdCB2aWEgZmV0Y2ggc3RyZWFtcyIKICAgIH0KICB9CgogIHZpZXdzIHsKICAgIGNvbnRhaW5lciBzaG9wIGNvbnRhaW5lcl92aWV3ICJDb250YWluZXIgRGlhZ3JhbSIgewogICAgICBpbmNsdWRlICoKICAgIH0KICAgIHN0eWxlcyB7CiAgICAgIGVsZW1lbnQgKiB7CiAgICAgICAgc2hhcGUgcm91bmRlZGJveAogICAgICAgIGJhY2tncm91bmQgInJveWFsYmx1ZSIKICAgICAgfQogICAgICBlbGVtZW50ICJCcm9rZXIiIHsKICAgICAgICBzaGFwZSBoZXhhZ29uCiAgICAgICAgYmFja2dyb3VuZCAidG9tYXRvIgogICAgICB9CiAgICAgIGVsZW1lbnQgIkRhdGFiYXNlIiB7CiAgICAgICAgc2hhcGUgY3lsaW5kZXIKICAgICAgICBiYWNrZ3JvdW5kICJvcmNoaWQiCiAgICAgIH0KICAgICAgZWxlbWVudCAiV2ViY2xpZW50IiB7CiAgICAgICAgc2hhcGUgd2ViYnJvd3NlcgogICAgICAgIGJhY2tncm91bmQgInNlYWdyZWVuIgogICAgICB9CiAgICAgIGVsZW1lbnQgIlBlcnNvbiIgewogICAgICAgIGJhY2tncm91bmQgInNlYWdyZWVuIgogICAgICB9CiAgICB9CiAgICB0aGVtZSBkZWZhdWx0CiAgfQp9"
  },
  "views" : {
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "container_view",
      "styles" : {
        "elements" : [ {
          "background" : "#4169e1",
          "shape" : "RoundedBox",
          "tag" : "*"
        }, {
          "background" : "#ff6347",
          "shape" : "Hexagon",
          "tag" : "Broker"
        }, {
          "background" : "#da70d6",
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#2e8b57",
          "shape" : "WebBrowser",
          "tag" : "Webclient"
        }, {
          "background" : "#2e8b57",
          "tag" : "Person"
        } ]
      },
      "terminology" : { },
      "themes" : [ "https://static.structurizr.com/themes/default/theme.json" ]
    },
    "containerViews" : [ {
      "description" : "Container Diagram",
      "dimensions" : {
        "height" : 3545,
        "width" : 3453
      },
      "elements" : [ {
        "id" : "2",
        "x" : 1630,
        "y" : 1560
      }, {
        "id" : "3",
        "x" : 1635,
        "y" : 770
      }, {
        "id" : "4",
        "x" : 2770,
        "y" : 785
      }, {
        "id" : "5",
        "x" : 2765,
        "y" : 335
      }, {
        "id" : "6",
        "x" : 1640,
        "y" : 2245
      }, {
        "id" : "7",
        "x" : 840,
        "y" : 2350
      }, {
        "id" : "8",
        "x" : 835,
        "y" : 2835
      }, {
        "id" : "9",
        "x" : 290,
        "y" : 2300
      }, {
        "id" : "12",
        "x" : 2435,
        "y" : 2355
      }, {
        "id" : "13",
        "x" : 2785,
        "y" : 2840
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "container_view",
      "order" : 1,
      "relationships" : [ {
        "id" : "10"
      }, {
        "id" : "11"
      }, {
        "id" : "14"
      }, {
        "id" : "15"
      }, {
        "id" : "16"
      }, {
        "id" : "17"
      }, {
        "id" : "18"
      }, {
        "id" : "19"
      }, {
        "id" : "20"
      }, {
        "id" : "21"
      }, {
        "id" : "22"
      } ],
      "softwareSystemId" : "1"
    } ]
  }
}