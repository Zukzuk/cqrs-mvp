{
  "configuration" : { },
  "description" : "Description",
  "documentation" : { },
  "id" : 1,
  "lastModifiedAgent" : "structurizr-ui",
  "lastModifiedDate" : "2025-08-19T15:53:23Z",
  "model" : {
    "properties" : {
      "structurizr.groupSeparator" : "::"
    },
    "softwareSystems" : [ {
      "containers" : [ {
        "description" : "Provides a robust messaging broker with management UI",
        "documentation" : { },
        "group" : ".Event Platform",
        "id" : "2",
        "name" : "Broker",
        "properties" : {
          "structurizr.dsl.identifier" : "broker_service"
        },
        "tags" : "Element,Container,Broker",
        "technology" : "RabbitMQ [5672,4672]"
      }, {
        "description" : "Dashboards en trace/metrics Explore",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "3",
        "name" : "Grafana",
        "properties" : {
          "structurizr.dsl.identifier" : "grafana"
        },
        "relationships" : [ {
          "description" : "get metrics",
          "destinationId" : "5",
          "id" : "22",
          "sourceId" : "3",
          "tags" : "Relationship"
        }, {
          "description" : "explore traces",
          "destinationId" : "6",
          "id" : "23",
          "sourceId" : "3",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Observability",
        "technology" : "Grafana [8300]"
      }, {
        "description" : "Recieve OTLP (traces/metrics) and export to Tempo/Prometheus",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "4",
        "name" : "OpenTelemetry Collector",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_collector"
        },
        "relationships" : [ {
          "description" : "export traces",
          "destinationId" : "6",
          "id" : "27",
          "sourceId" : "4",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Observability",
        "technology" : "OpenTelemetry Collector [8317,8318,9464]"
      }, {
        "description" : "Scrape metrics van OTel Collector en RabbitMQ Exporter",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "5",
        "name" : "Prometheus",
        "properties" : {
          "structurizr.dsl.identifier" : "prometheus"
        },
        "relationships" : [ {
          "description" : "scrape metrics and traces",
          "destinationId" : "2",
          "id" : "28",
          "sourceId" : "5",
          "tags" : "Relationship"
        }, {
          "description" : "get metrics",
          "destinationId" : "4",
          "id" : "29",
          "sourceId" : "5",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Observability",
        "technology" : "Prometheus [8900]"
      }, {
        "description" : "Opslag voor traces (OpenTelemetry)",
        "documentation" : { },
        "group" : ".Observability",
        "id" : "6",
        "name" : "Tempo",
        "properties" : {
          "structurizr.dsl.identifier" : "tempo"
        },
        "tags" : "Element,Container,{,Observability",
        "technology" : "Grafana Tempo [8200]"
      }, {
        "description" : "Catch OTLP and send data to Otel Collector",
        "documentation" : { },
        "group" : ".Order Domain",
        "id" : "7",
        "name" : "Otel Order Domain",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_inject_order_domain"
        },
        "relationships" : [ {
          "description" : "report metrics and traces",
          "destinationId" : "4",
          "id" : "8",
          "sourceId" : "7",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Injector",
        "technology" : "Code injection"
      }, {
        "description" : "Subscribes to certain Commands, protects the DomainLogic, emits DomainEvents to the broker",
        "documentation" : { },
        "group" : ".Order Domain",
        "id" : "9",
        "name" : "Order Application",
        "properties" : {
          "structurizr.dsl.identifier" : "order_service"
        },
        "relationships" : [ {
          "description" : "subscribe to certain Commands, publish DomainEvents",
          "destinationId" : "2",
          "id" : "25",
          "sourceId" : "9",
          "tags" : "Relationship"
        }, {
          "description" : "fetch streams, commit DomainEvents",
          "destinationId" : "11",
          "id" : "26",
          "sourceId" : "9",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express [4000]"
      }, {
        "description" : "Append only journal for DomainEvents",
        "documentation" : { },
        "group" : ".Order Domain::.Event Store",
        "id" : "10",
        "name" : "Order EventStore Database",
        "properties" : {
          "structurizr.dsl.identifier" : "order_eventstore_db"
        },
        "tags" : "Element,Container,{,Database",
        "technology" : "MongoDB [default]"
      }, {
        "description" : "Durable, append-only event journal",
        "documentation" : { },
        "group" : ".Order Domain::.Event Store",
        "id" : "11",
        "name" : "Order EventStore",
        "properties" : {
          "structurizr.dsl.identifier" : "order_eventstore_service"
        },
        "relationships" : [ {
          "description" : "read, write",
          "destinationId" : "10",
          "id" : "24",
          "sourceId" : "11",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express [4001]"
      }, {
        "description" : "Catch OTLP and send data to Otel Collector",
        "documentation" : { },
        "group" : ".Shop",
        "id" : "12",
        "name" : "Otel Shop",
        "properties" : {
          "structurizr.dsl.identifier" : "otel_inject_shop"
        },
        "relationships" : [ {
          "description" : "report metrics and traces",
          "destinationId" : "4",
          "id" : "13",
          "sourceId" : "12",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Injector",
        "technology" : "Code injection"
      }, {
        "description" : "Exposes and guards WebSocket/APIs, publishes Commands to the broker, forwards Queries to projections, listens for Payloads from projections and forwards them to web clients",
        "documentation" : { },
        "group" : ".Shop",
        "id" : "14",
        "name" : "Shop BFF",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_bff_service"
        },
        "relationships" : [ {
          "description" : "publish Commands",
          "destinationId" : "2",
          "id" : "30",
          "sourceId" : "14",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express, Socket.io [3000]"
      }, {
        "description" : "Read DB for denormalized views",
        "documentation" : { },
        "group" : ".Shop::.Projection",
        "id" : "15",
        "name" : "Shop Projection Database",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_projection_db"
        },
        "relationships" : [ {
          "description" : "seed script via fetch streams",
          "destinationId" : "11",
          "id" : "31",
          "sourceId" : "15",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,{,Database",
        "technology" : "Node.js, MongoDB [default]"
      }, {
        "description" : "Handles fetches, subscribes to DomainEvents, denormalizes and upserts Payloads, pushes Payloads to bff",
        "documentation" : { },
        "group" : ".Shop::.Projection",
        "id" : "16",
        "name" : "Shop Projection",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_projection_service"
        },
        "relationships" : [ {
          "description" : "subscribe to certain DomainEvents",
          "destinationId" : "2",
          "id" : "32",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "listen for Queries and push Payloads",
          "destinationId" : "14",
          "id" : "33",
          "sourceId" : "16",
          "tags" : "Relationship"
        }, {
          "description" : "fetch data, upsert data",
          "destinationId" : "15",
          "id" : "34",
          "sourceId" : "16",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Node.js, Express, Socket.io-client [3002]"
      }, {
        "description" : "Web interface, connects to bff via wss, sends Queries and Commands to bff, renders incoming Payloads",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "17",
        "name" : "Shop Frontend SPA",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver"
        },
        "relationships" : [ {
          "description" : "send Commands and Queries, listen for Payloads",
          "destinationId" : "14",
          "id" : "35",
          "sourceId" : "17",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Webclient",
        "technology" : "Browser, Socket.io.min [URL]"
      }, {
        "description" : "Serves static files",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "18",
        "name" : "Shop Frontend Server",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver_server"
        },
        "relationships" : [ {
          "description" : "serves",
          "destinationId" : "17",
          "id" : "20",
          "sourceId" : "18",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container",
        "technology" : "Nginx [3001]"
      }, {
        "description" : "End user interacting via browser",
        "documentation" : { },
        "group" : ".Shop::.Website",
        "id" : "19",
        "name" : "User",
        "properties" : {
          "structurizr.dsl.identifier" : "shop_webserver_user"
        },
        "relationships" : [ {
          "description" : "uses",
          "destinationId" : "17",
          "id" : "21",
          "sourceId" : "19",
          "tags" : "Relationship"
        } ],
        "tags" : "Element,Container,Person",
        "technology" : "Person"
      } ],
      "documentation" : { },
      "id" : "1",
      "location" : "Unspecified",
      "name" : "CQRS-ES System (MVP)",
      "properties" : {
        "structurizr.dsl.identifier" : "shop"
      },
      "tags" : "Element,Software System"
    } ]
  },
  "name" : "Name",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlIHsKICBtb2RlbCAiY3Fycy1tdnAiIHsKICAgIHByb3BlcnRpZXMgewogICAgICBzdHJ1Y3R1cml6ci5ncm91cFNlcGFyYXRvciAiOjoiCiAgICB9CgogICAgc2hvcCA9IHNvZnR3YXJlU3lzdGVtICJDUVJTLUVTIFN5c3RlbSAoTVZQKSIgewoKICAgICAgZ3JvdXAgIi5FdmVudCBQbGF0Zm9ybSIgewogICAgICAgIGJyb2tlcl9zZXJ2aWNlID0gY29udGFpbmVyICJCcm9rZXIiICJQcm92aWRlcyBhIHJvYnVzdCBtZXNzYWdpbmcgYnJva2VyIHdpdGggbWFuYWdlbWVudCBVSSIgIlJhYmJpdE1RIFs1NjcyLDQ2NzJdIiB7CiAgICAgICAgICB0YWdzICJCcm9rZXIiCiAgICAgICAgfQogICAgICB9CgogICAgICBncm91cCAiLk9ic2VydmFiaWxpdHkiIHsKICAgICAgICBncmFmYW5hID0gY29udGFpbmVyICJHcmFmYW5hIiAiRGFzaGJvYXJkcyBlbiB0cmFjZS9tZXRyaWNzIEV4cGxvcmUiICJHcmFmYW5hIFs4MzAwXSIiIHsKICAgICAgICAgIHRhZ3MgIk9ic2VydmFiaWxpdHkiCiAgICAgICAgfQogICAgICAgIG90ZWxfY29sbGVjdG9yID0gY29udGFpbmVyICJPcGVuVGVsZW1ldHJ5IENvbGxlY3RvciIgIlJlY2lldmUgT1RMUCAodHJhY2VzL21ldHJpY3MpIGFuZCBleHBvcnQgdG8gVGVtcG8vUHJvbWV0aGV1cyIgIk9wZW5UZWxlbWV0cnkgQ29sbGVjdG9yIFs4MzE3LDgzMTgsOTQ2NF0iIiB7CiAgICAgICAgICB0YWdzICJPYnNlcnZhYmlsaXR5IgogICAgICAgIH0KICAgICAgICBwcm9tZXRoZXVzID0gY29udGFpbmVyICJQcm9tZXRoZXVzIiAiU2NyYXBlIG1ldHJpY3MgdmFuIE9UZWwgQ29sbGVjdG9yIGVuIFJhYmJpdE1RIEV4cG9ydGVyIiAiUHJvbWV0aGV1cyBbODkwMF0iIiB7CiAgICAgICAgICB0YWdzICJPYnNlcnZhYmlsaXR5IgogICAgICAgIH0KICAgICAgICB0ZW1wbyA9IGNvbnRhaW5lciAiVGVtcG8iICJPcHNsYWcgdm9vciB0cmFjZXMgKE9wZW5UZWxlbWV0cnkpIiAiR3JhZmFuYSBUZW1wbyBbODIwMF0iIiB7CiAgICAgICAgICB0YWdzICJPYnNlcnZhYmlsaXR5IgogICAgICAgIH0KICAgICAgfQoKICAgICAgZ3JvdXAgIi5PcmRlciBEb21haW4iIHsKICAgICAgICBvdGVsX2luamVjdF9vcmRlcl9kb21haW4gPSBjb250YWluZXIgIk90ZWwgT3JkZXIgRG9tYWluIiAiQ2F0Y2ggT1RMUCBhbmQgc2VuZCBkYXRhIHRvIE90ZWwgQ29sbGVjdG9yIiAiQ29kZSBpbmplY3Rpb24iIHsKICAgICAgICAgIHRhZ3MgIkluamVjdG9yIgogICAgICAgIH0KICAgICAgICBvdGVsX2luamVjdF9vcmRlcl9kb21haW4gLT4gb3RlbF9jb2xsZWN0b3IgInJlcG9ydCBtZXRyaWNzIGFuZCB0cmFjZXMiCgogICAgICAgIG9yZGVyX3NlcnZpY2UgPSBjb250YWluZXIgIk9yZGVyIEFwcGxpY2F0aW9uIiAiU3Vic2NyaWJlcyB0byBjZXJ0YWluIENvbW1hbmRzLCBwcm90ZWN0cyB0aGUgRG9tYWluTG9naWMsIGVtaXRzIERvbWFpbkV2ZW50cyB0byB0aGUgYnJva2VyIiAiTm9kZS5qcywgRXhwcmVzcyBbNDAwMF0iCgogICAgICAgIGdyb3VwICIuRXZlbnQgU3RvcmUiIHsKICAgICAgICAgIG9yZGVyX2V2ZW50c3RvcmVfZGIgPSBjb250YWluZXIgIk9yZGVyIEV2ZW50U3RvcmUgRGF0YWJhc2UiICJBcHBlbmQgb25seSBqb3VybmFsIGZvciBEb21haW5FdmVudHMiICJNb25nb0RCIFtkZWZhdWx0XSIiIHsKICAgICAgICAgICAgdGFncyAiRGF0YWJhc2UiCiAgICAgICAgICB9CiAgICAgICAgICBvcmRlcl9ldmVudHN0b3JlX3NlcnZpY2UgPSBjb250YWluZXIgIk9yZGVyIEV2ZW50U3RvcmUiICJEdXJhYmxlLCBhcHBlbmQtb25seSBldmVudCBqb3VybmFsIiAiTm9kZS5qcywgRXhwcmVzcyBbNDAwMV0iCiAgICAgICAgfQogICAgICB9CgogICAgICBncm91cCAiLlNob3AiIHsKICAgICAgICBvdGVsX2luamVjdF9zaG9wID0gY29udGFpbmVyICJPdGVsIFNob3AiICJDYXRjaCBPVExQIGFuZCBzZW5kIGRhdGEgdG8gT3RlbCBDb2xsZWN0b3IiICJDb2RlIGluamVjdGlvbiIgewogICAgICAgICAgdGFncyAiSW5qZWN0b3IiCiAgICAgICAgfQogICAgICAgIG90ZWxfaW5qZWN0X3Nob3AgLT4gb3RlbF9jb2xsZWN0b3IgInJlcG9ydCBtZXRyaWNzIGFuZCB0cmFjZXMiCgogICAgICAgIHNob3BfYmZmX3NlcnZpY2UgPSBjb250YWluZXIgIlNob3AgQkZGIiAiRXhwb3NlcyBhbmQgZ3VhcmRzIFdlYlNvY2tldC9BUElzLCBwdWJsaXNoZXMgQ29tbWFuZHMgdG8gdGhlIGJyb2tlciwgZm9yd2FyZHMgUXVlcmllcyB0byBwcm9qZWN0aW9ucywgbGlzdGVucyBmb3IgUGF5bG9hZHMgZnJvbSBwcm9qZWN0aW9ucyBhbmQgZm9yd2FyZHMgdGhlbSB0byB3ZWIgY2xpZW50cyIgIk5vZGUuanMsIEV4cHJlc3MsIFNvY2tldC5pbyBbMzAwMF0iCgogICAgICAgIGdyb3VwICIuUHJvamVjdGlvbiIgewogICAgICAgICAgc2hvcF9wcm9qZWN0aW9uX2RiID0gY29udGFpbmVyICJTaG9wIFByb2plY3Rpb24gRGF0YWJhc2UiICJSZWFkIERCIGZvciBkZW5vcm1hbGl6ZWQgdmlld3MiICJOb2RlLmpzLCBNb25nb0RCIFtkZWZhdWx0XSIiIHsKICAgICAgICAgICAgdGFncyAiRGF0YWJhc2UiCiAgICAgICAgICB9CiAgICAgICAgICBzaG9wX3Byb2plY3Rpb25fc2VydmljZSA9IGNvbnRhaW5lciAiU2hvcCBQcm9qZWN0aW9uIiAiSGFuZGxlcyBmZXRjaGVzLCBzdWJzY3JpYmVzIHRvIERvbWFpbkV2ZW50cywgZGVub3JtYWxpemVzIGFuZCB1cHNlcnRzIFBheWxvYWRzLCBwdXNoZXMgUGF5bG9hZHMgdG8gYmZmIiAiTm9kZS5qcywgRXhwcmVzcywgU29ja2V0LmlvLWNsaWVudCBbMzAwMl0iCiAgICAgICAgfQoKICAgICAgICBncm91cCAiLldlYnNpdGUiIHsKICAgICAgICAgIHNob3Bfd2Vic2VydmVyID0gY29udGFpbmVyICJTaG9wIEZyb250ZW5kIFNQQSIgIldlYiBpbnRlcmZhY2UsIGNvbm5lY3RzIHRvIGJmZiB2aWEgd3NzLCBzZW5kcyBRdWVyaWVzIGFuZCBDb21tYW5kcyB0byBiZmYsIHJlbmRlcnMgaW5jb21pbmcgUGF5bG9hZHMiICJCcm93c2VyLCBTb2NrZXQuaW8ubWluIFtVUkxdIiB7CiAgICAgICAgICAgIHRhZ3MgIldlYmNsaWVudCIKICAgICAgICAgIH0KICAgICAgICAgIHNob3Bfd2Vic2VydmVyX3NlcnZlciA9IGNvbnRhaW5lciAiU2hvcCBGcm9udGVuZCBTZXJ2ZXIiICJTZXJ2ZXMgc3RhdGljIGZpbGVzIiAiTmdpbnggWzMwMDFdIgogICAgICAgICAgc2hvcF93ZWJzZXJ2ZXJfdXNlciA9IGNvbnRhaW5lciAiVXNlciIgIkVuZCB1c2VyIGludGVyYWN0aW5nIHZpYSBicm93c2VyIiAiUGVyc29uIiB7CiAgICAgICAgICAgIHRhZ3MgIlBlcnNvbiIKICAgICAgICAgIH0KICAgICAgICAgIHNob3Bfd2Vic2VydmVyX3NlcnZlciAtPiBzaG9wX3dlYnNlcnZlciAic2VydmVzIgogICAgICAgICAgc2hvcF93ZWJzZXJ2ZXJfdXNlciAtPiBzaG9wX3dlYnNlcnZlciAidXNlcyIKICAgICAgICB9CiAgICAgIH0KCgogICAgICBncmFmYW5hIC0+IHByb21ldGhldXMgImdldCBtZXRyaWNzIgogICAgICBncmFmYW5hIC0+IHRlbXBvICJleHBsb3JlIHRyYWNlcyIKICAgICAgb3JkZXJfZXZlbnRzdG9yZV9zZXJ2aWNlIC0+IG9yZGVyX2V2ZW50c3RvcmVfZGIgInJlYWQsIHdyaXRlIgogICAgICBvcmRlcl9zZXJ2aWNlIC0+IGJyb2tlcl9zZXJ2aWNlICJzdWJzY3JpYmUgdG8gY2VydGFpbiBDb21tYW5kcywgcHVibGlzaCBEb21haW5FdmVudHMiCiAgICAgIG9yZGVyX3NlcnZpY2UgLT4gb3JkZXJfZXZlbnRzdG9yZV9zZXJ2aWNlICJmZXRjaCBzdHJlYW1zLCBjb21taXQgRG9tYWluRXZlbnRzIgogICAgICBvdGVsX2NvbGxlY3RvciAtPiB0ZW1wbyAiZXhwb3J0IHRyYWNlcyIKICAgICAgcHJvbWV0aGV1cyAtPiBicm9rZXJfc2VydmljZSAic2NyYXBlIG1ldHJpY3MgYW5kIHRyYWNlcyIKICAgICAgcHJvbWV0aGV1cyAtPiBvdGVsX2NvbGxlY3RvciAiZ2V0IG1ldHJpY3MiCiAgICAgIHNob3BfYmZmX3NlcnZpY2UgLT4gYnJva2VyX3NlcnZpY2UgInB1Ymxpc2ggQ29tbWFuZHMiCiAgICAgIHNob3BfcHJvamVjdGlvbl9kYiAtPiBvcmRlcl9ldmVudHN0b3JlX3NlcnZpY2UgInNlZWQgc2NyaXB0IHZpYSBmZXRjaCBzdHJlYW1zIgogICAgICBzaG9wX3Byb2plY3Rpb25fc2VydmljZSAtPiBicm9rZXJfc2VydmljZSAic3Vic2NyaWJlIHRvIGNlcnRhaW4gRG9tYWluRXZlbnRzIgogICAgICBzaG9wX3Byb2plY3Rpb25fc2VydmljZSAtPiBzaG9wX2JmZl9zZXJ2aWNlICJsaXN0ZW4gZm9yIFF1ZXJpZXMgYW5kIHB1c2ggUGF5bG9hZHMiCiAgICAgIHNob3BfcHJvamVjdGlvbl9zZXJ2aWNlIC0+IHNob3BfcHJvamVjdGlvbl9kYiAiZmV0Y2ggZGF0YSwgdXBzZXJ0IGRhdGEiCiAgICAgIHNob3Bfd2Vic2VydmVyIC0+IHNob3BfYmZmX3NlcnZpY2UgInNlbmQgQ29tbWFuZHMgYW5kIFF1ZXJpZXMsIGxpc3RlbiBmb3IgUGF5bG9hZHMiCiAgICB9CiAgfQoKICB2aWV3cyB7CiAgICBjb250YWluZXIgc2hvcCBjb250YWluZXJfdmlldyAiQ29udGFpbmVyIERpYWdyYW0iIHsKICAgICAgaW5jbHVkZSAqCiAgICB9CiAgICBzdHlsZXMgewogICAgICBlbGVtZW50ICogewogICAgICAgIHNoYXBlIHJvdW5kZWRib3gKICAgICAgICBiYWNrZ3JvdW5kICJyb3lhbGJsdWUiCiAgICAgIH0KICAgICAgZWxlbWVudCAiQnJva2VyIiB7CiAgICAgICAgc2hhcGUgaGV4YWdvbgogICAgICAgIGJhY2tncm91bmQgInRvbWF0byIKICAgICAgfQogICAgICBlbGVtZW50ICJJbmplY3RvciIgewogICAgICAgIHNoYXBlIGVsbGlwc2UKICAgICAgICBiYWNrZ3JvdW5kICJibGFjayIKICAgICAgfQogICAgICBlbGVtZW50ICJPYnNlcnZhYmlsaXR5IiB7CiAgICAgICAgc2hhcGUgcm91bmRlZGJveAogICAgICAgIGJhY2tncm91bmQgImRhcmtvcmFuZ2UiCiAgICAgIH0KICAgICAgZWxlbWVudCAiRGF0YWJhc2UiIHsKICAgICAgICBzaGFwZSBjeWxpbmRlcgogICAgICAgIGJhY2tncm91bmQgIm9yY2hpZCIKICAgICAgfQogICAgICBlbGVtZW50ICJXZWJjbGllbnQiIHsKICAgICAgICBzaGFwZSB3ZWJicm93c2VyCiAgICAgICAgYmFja2dyb3VuZCAic2VhZ3JlZW4iCiAgICAgIH0KICAgICAgZWxlbWVudCAiUGVyc29uIiB7CiAgICAgICAgYmFja2dyb3VuZCAic2VhZ3JlZW4iCiAgICAgIH0KICAgIH0KICAgIHRoZW1lIGRlZmF1bHQKICB9Cn0="
  },
  "views" : {
    "configuration" : {
      "branding" : { },
      "lastSavedView" : "container_view",
      "metadataSymbols" : "SquareBrackets",
      "styles" : {
        "elements" : [ {
          "background" : "#4169e1",
          "shape" : "RoundedBox",
          "tag" : "*"
        }, {
          "background" : "#ff6347",
          "shape" : "Hexagon",
          "tag" : "Broker"
        }, {
          "background" : "#000000",
          "shape" : "Ellipse",
          "tag" : "Injector"
        }, {
          "background" : "#ff8c00",
          "shape" : "RoundedBox",
          "tag" : "Observability"
        }, {
          "background" : "#da70d6",
          "shape" : "Cylinder",
          "tag" : "Database"
        }, {
          "background" : "#2e8b57",
          "shape" : "WebBrowser",
          "tag" : "Webclient"
        }, {
          "background" : "#2e8b57",
          "tag" : "Person"
        } ]
      },
      "terminology" : { },
      "themes" : [ "https://static.structurizr.com/themes/default/theme.json" ]
    },
    "containerViews" : [ {
      "description" : "Container Diagram",
      "dimensions" : {
        "height" : 3073,
        "width" : 4608
      },
      "elements" : [ {
        "id" : "2",
        "x" : 2355,
        "y" : 1180
      }, {
        "id" : "3",
        "x" : 1405,
        "y" : 120
      }, {
        "id" : "4",
        "x" : 675,
        "y" : 575
      }, {
        "id" : "5",
        "x" : 1395,
        "y" : 580
      }, {
        "id" : "6",
        "x" : 675,
        "y" : 115
      }, {
        "id" : "7",
        "x" : 3255,
        "y" : 75
      }, {
        "id" : "9",
        "x" : 3235,
        "y" : 460
      }, {
        "id" : "10",
        "x" : 4075,
        "y" : 65
      }, {
        "id" : "11",
        "x" : 3975,
        "y" : 455
      }, {
        "id" : "12",
        "x" : 1040,
        "y" : 1870
      }, {
        "id" : "14",
        "x" : 2895,
        "y" : 1860
      }, {
        "id" : "15",
        "x" : 3975,
        "y" : 2365
      }, {
        "id" : "16",
        "x" : 3630,
        "y" : 1905
      }, {
        "id" : "17",
        "x" : 2160,
        "y" : 1930
      }, {
        "id" : "18",
        "x" : 2160,
        "y" : 2370
      }, {
        "id" : "19",
        "x" : 1590,
        "y" : 1895
      } ],
      "externalSoftwareSystemBoundariesVisible" : false,
      "key" : "container_view",
      "order" : 1,
      "relationships" : [ {
        "id" : "13"
      }, {
        "id" : "20"
      }, {
        "id" : "21"
      }, {
        "id" : "22"
      }, {
        "id" : "23"
      }, {
        "id" : "24"
      }, {
        "id" : "25"
      }, {
        "id" : "26"
      }, {
        "id" : "27"
      }, {
        "id" : "28"
      }, {
        "id" : "29"
      }, {
        "id" : "30"
      }, {
        "id" : "31"
      }, {
        "id" : "32"
      }, {
        "id" : "33"
      }, {
        "id" : "34"
      }, {
        "id" : "35"
      }, {
        "id" : "8"
      } ],
      "softwareSystemId" : "1"
    } ]
  }
}