version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 10

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./order-service/src:/usr/src/app/src

  order-projection-service:
    build:
      context: .
      dockerfile: order-projection-service/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./order-projection-service/src:/usr/src/app/src

  shop-bff-service:
    build:
      context: .
      dockerfile: shop-bff-service/Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
    ports:
      - "4000:4000"
    volumes:
      - ./shop-bff-service/src:/usr/src/app/src

  shop-frontend:
    build:
      context: ./shop-frontend
      dockerfile: Dockerfile
    depends_on:
      shop-bff-service:
        condition: service_started
    ports:
      - "3000:80"
    volumes:
      - ./shop-frontend/src:/usr/share/nginx/html:ro
